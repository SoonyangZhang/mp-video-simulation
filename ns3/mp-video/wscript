## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    mpvideo= bld.create_ns3_module('mp-video', ['core','network','internet','ns3-rmcat'])
    mpvideo.env.append_value('CXXFLAGS', '-std=c++14');
    mpvideo.env.append_value("CXXFLAGS", "-I/home/zsy/MyTest/my_quic_2/libquic")
    mpvideo.env.append_value("LINKFLAGS", ["-L/home/zsy/MyTest/my_quic_2/build/libquic"])
    mpvideo.env.append_value("LIB", ["quic"])
    mpvideo.source = [
    'model/cf_stream.c',
    'model/sim_proto.c',
    'model/cf_crc32.c',
    'model/posix.c',
    'model/mpcommon.cc',
    'model/schedule.cc',
    'model/pathsender.cc',
    'model/mpsender.cc',
    'model/pathreceiver.cc',
    'model/mpreceiver.cc',
    'model/roundrobinschedule.cc',
    'model/aggregaterate.cc',
    'model/fakevideogenerator.cc',
    'model/fakevideoconsumer.cc',
    'model/mpvideoheader.cc',
    'model/scaleschedule.cc',
    'model/balancecostschedule.cc',
    'model/minqueueschedule.cc',
    'model/wrr.cc',
    'model/wrrschedule.cc',
    'model/edcldschedule.cc',
    'model/sflschedule.cc',
    'model/waterfillingschedule.cc',
    'model/mptrace.cc',
    'model/fun_test/t_pace.cc',
    'model/fun_test/t_generator.cc',
    'model/fun_test/ratestatistics.cc',
    'model/fun_test/t_trace.cc',
    'model/fun_test/t_pacer_sender.cc',
    'model/fun_test/t_sendagent.cc',
    'model/fun_test/t_recvagent.cc',
    'model/mock_sender.cc',
    'model/mock_receiver.cc',
    'model/mp_sender_v1.cc',
    'model/mp_receiver_v1.cc',
    'model/path_sender_v1.cc',
    'model/path_receiver_v1.cc',
    'model/interface_v1.cc',
    'model/idealpacer.cc',
    'model/bc_v1.cc',
    'model/idealschedule.cc',
    'model/edcld_v1.cc',
    'model/sfl_v1.cc',
    'model/idealencoder.cc',
    'model/video_proto.cc',
    'model/ns_quic_time.cc',
    'model/trace_v1.cc',
    'model/congestion/bbr_sender_v1.cc',
    'model/congestion/bbr_sender_v2.cc',
	]
    headers = bld(features='ns3header')
    headers.module = 'mp-video'
    headers.source = [
    'model/cf_platform.h',
    'model/cf_stream.h',
    'model/sim_proto.h',
    'model/pathcommon.h',
    'model/schedule.h',
    'model/ratecontrol.h',
    'model/pathsender.h',
    'model/mpsender.h',
    'model/pathreceiver.h',
    'model/mpreceiver.h',
    'model/mpcommon.h',
    'model/sessioninterface.h',
    'model/roundrobinschedule.h', 
    'model/aggregaterate.h',
    'model/videosource.h',
    'model/fakevideogenerator.h',
    'model/fakevideoconsumer.h',
    'model/mpvideoheader.h',
    'model/scaleschedule.h',
    'model/balancecostschedule.h',
    'model/minqueueschedule.h',
    'model/wrr.h',
    'model/wrrschedule.h',
    'model/edcldschedule.h',
    'model/sflschedule.h',
    'model/waterfillingschedule.h',
    'model/mptrace.h',
    'model/fun_test/t_interface.h',
    'model/fun_test/t_pace.h',
    'model/fun_test/t_generator.h',
    'model/fun_test/ratestatistics.h',
    'model/fun_test/t_trace.h',
    'model/fun_test/t_pacer_sender.h',
    'model/fun_test/t_sendagent.h',
    'model/fun_test/t_recvagent.h',
    'model/mock_sender.h',
    'model/mock_receiver.h',
    'model/mp_sender_v1.h',
    'model/mp_receiver_v1.h',
    'model/path_sender_v1.h',
    'model/path_receiver_v1.h',
    'model/video_proto.h',
    'model/interface_v1.h',
    'model/videosink.h',
    'model/idealcc.h',
    'model/idealpacer.h',
    'model/bc_v1.h',
    'model/idealschedule.h',
    'model/edcld_v1.h',
    'model/sfl_v1.h',
    'model/idealencoder.h',
    'model/ns_quic_time.h',
    'model/trace_v1.h',
    'model/congestion/bbr_sender_v1.h',
    'model/congestion/bbr_sender_v2.h',
	]
    mpvideo.env.append_value("CFLAGS","-fPIC")
