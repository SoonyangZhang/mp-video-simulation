## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    mpvideo= bld.create_ns3_module('mp-video', ['core','network','internet'])
    mpvideo.source = [
    'model/cf_stream.c',
    'model/sim_proto.c',
    'model/cf_crc32.c',
    'model/posix.c',
    'model/mpcommon.cc',
    'model/schedule.cc',
    'model/pathsender.cc',
    'model/mpsender.cc',
    'model/pathreceiver.cc',
    'model/mpreceiver.cc',
    'model/roundrobinschedule.cc',
    'model/aggregaterate.cc',
    'model/fakevideogenerator.cc',
    'model/fakevideoconsumer.cc',
    'model/mpvideoheader.cc',
    'model/scaleschedule.cc',
    'model/balancecostschedule.cc',
    'model/wrr.cc',
    'model/wrrschedule.cc',
    'model/edcldschedule.cc',
    'model/mptrace.cc',
    'model/fun_test/t_pace.cc',
    'model/fun_test/t_generator.cc',
    'model/fun_test/ratestatistics.cc',
    'model/fun_test/t_trace.cc',
	]
    headers = bld(features='ns3header')
    headers.module = 'mp-video'
    headers.source = [
    'model/cf_platform.h',
    'model/cf_stream.h',
    'model/sim_proto.h',
    'model/pathcommon.h',
    'model/schedule.h',
    'model/ratecontrol.h',
    'model/pathsender.h',
    'model/mpsender.h',
    'model/pathreceiver.h',
    'model/mpreceiver.h',
    'model/mpcommon.h',
    'model/sessioninterface.h',
    'model/roundrobinschedule.h', 
    'model/aggregaterate.h',
    'model/videosource.h',
    'model/fakevideogenerator.h',
    'model/fakevideoconsumer.h',
    'model/mpvideoheader.h',
    'model/scaleschedule.h',
    'model/balancecostschedule.h',
    'model/wrr.h',
    'model/wrrschedule.h',
    'model/edcldschedule.h',
    'model/mptrace.h',
    'model/fun_test/t_interface.h',
    'model/fun_test/t_pace.h',
    'model/fun_test/t_generator.h',
    'model/fun_test/ratestatistics.h',
    'model/fun_test/t_trace.h',
	]
    mpvideo.env.append_value("CFLAGS","-fPIC")
